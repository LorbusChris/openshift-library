{
	"kind": "Template",
	"apiVersion": "v1",
	"metadata": {
		"name": "datavirt64-secure-s2i",
		"creationTimestamp": null,
		"annotations": {
			"description": "An example JBoss Data Virtualization application. For more information about using this template, see https://github.com/jboss-openshift/application-templates.",
			"iconClass": "icon-datavirt",
			"openshift.io/display-name": "JBoss Data Virtualization 6.4 (with SSL)",
			"openshift.io/provider-display-name": "Red Hat, Inc.",
			"tags": "jdv,datavirt,database,jboss",
			"template.openshift.io/documentation-url": "https://access.redhat.com/documentation/en/red-hat-jboss-data-virtualization/",
			"template.openshift.io/long-description": "This template defines resources needed to develop Red Hat Data Virtualization based application, including a build configuration, application deployment configuration and ability to configure certificates for serving secure content.",
			"template.openshift.io/support-url": "https://access.redhat.com",
			"version": "1.7.0"
		}
	},
	"message": "A new data service has been created in your project.  The username/password for accessing the service is ${TEIID_USERNAME}/${TEIID_PASSWORD}.  Please be sure to create the following secrets: \"${CONFIGURATION_NAME}\" containing the datasource configuration details required by the deployed VDB(s); \"${HTTPS_SECRET}\" containing the ${HTTPS_KEYSTORE} file used for serving secure content; \"${JGROUPS_ENCRYPT_SECRET}\" containing the ${JGROUPS_ENCRYPT_KEYSTORE} file used for securing JGroups communications.",
	"objects": [
		{
			"apiVersion": "v1",
			"kind": "Service",
			"metadata": {
				"annotations": {
					"description": "The data virtualization services."
				},
				"labels": {
					"application": "${APPLICATION_NAME}"
				},
				"name": "${APPLICATION_NAME}"
			},
			"spec": {
				"ports": [
					{
						"name": "http",
						"port": 8080,
						"targetPort": "http"
					},
					{
						"name": "https",
						"port": 8443,
						"targetPort": "https"
					},
					{
						"name": "jdbc",
						"port": 31000,
						"targetPort": "jdbc"
					},
					{
						"name": "jdbcs",
						"port": 31443,
						"targetPort": "jdbcs"
					},
					{
						"name": "odbc",
						"port": 35432,
						"targetPort": "odbc"
					},
					{
						"name": "odbcs",
						"port": 35443,
						"targetPort": "odbcs"
					}
				],
				"selector": {
					"deploymentConfig": "${APPLICATION_NAME}"
				}
			}
		},
		{
			"apiVersion": "v1",
			"kind": "Service",
			"metadata": {
				"annotations": {
					"description": "The JGroups ping port for clustering.",
					"service.alpha.kubernetes.io/tolerate-unready-endpoints": "true"
				},
				"labels": {
					"application": "${APPLICATION_NAME}"
				},
				"name": "${APPLICATION_NAME}-ping"
			},
			"spec": {
				"clusterIP": "None",
				"ports": [
					{
						"name": "ping",
						"port": 8888
					}
				],
				"selector": {
					"deploymentConfig": "${APPLICATION_NAME}"
				}
			}
		},
		{
			"apiVersion": "v1",
			"id": "${APPLICATION_NAME}-http",
			"kind": "Route",
			"metadata": {
				"annotations": {
					"description": "Route for application's http (REST) service."
				},
				"labels": {
					"application": "${APPLICATION_NAME}"
				},
				"name": "${APPLICATION_NAME}"
			},
			"spec": {
				"host": "${HOSTNAME_HTTP}",
				"port": {
					"targetPort": "http"
				},
				"to": {
					"name": "${APPLICATION_NAME}"
				}
			}
		},
		{
			"apiVersion": "v1",
			"id": "${APPLICATION_NAME}-https",
			"kind": "Route",
			"metadata": {
				"annotations": {
					"description": "Route for application's https (REST) service."
				},
				"labels": {
					"application": "${APPLICATION_NAME}"
				},
				"name": "secure-${APPLICATION_NAME}"
			},
			"spec": {
				"host": "${HOSTNAME_HTTPS}",
				"port": {
					"targetPort": "https"
				},
				"tls": {
					"termination": "passthrough"
				},
				"to": {
					"name": "${APPLICATION_NAME}"
				}
			}
		},
		{
			"apiVersion": "v1",
			"id": "${APPLICATION_NAME}-jdbc",
			"kind": "Route",
			"metadata": {
				"annotations": {
					"description": "Route for application's JDBC service."
				},
				"labels": {
					"application": "${APPLICATION_NAME}"
				},
				"name": "jdbc-${APPLICATION_NAME}"
			},
			"spec": {
				"host": "${HOSTNAME_JDBC}",
				"port": {
					"targetPort": "jdbcs"
				},
				"tls": {
					"termination": "passthrough"
				},
				"to": {
					"name": "${APPLICATION_NAME}"
				}
			}
		},
		{
			"apiVersion": "v1",
			"kind": "ImageStream",
			"metadata": {
				"labels": {
					"application": "${APPLICATION_NAME}"
				},
				"name": "${APPLICATION_NAME}"
			}
		},
		{
			"apiVersion": "v1",
			"kind": "BuildConfig",
			"metadata": {
				"labels": {
					"application": "${APPLICATION_NAME}"
				},
				"name": "${APPLICATION_NAME}"
			},
			"spec": {
				"output": {
					"to": {
						"kind": "ImageStreamTag",
						"name": "${APPLICATION_NAME}:latest"
					}
				},
				"source": {
					"contextDir": "${CONTEXT_DIR}",
					"git": {
						"ref": "${SOURCE_REPOSITORY_REF}",
						"uri": "${SOURCE_REPOSITORY_URL}"
					},
					"type": "Git"
				},
				"strategy": {
					"sourceStrategy": {
						"env": [
							{
								"name": "MAVEN_MIRROR_URL",
								"value": "${MAVEN_MIRROR_URL}"
							},
							{
								"name": "CUSTOM_INSTALL_DIRECTORIES",
								"value": "extensions/*"
							},
							{
								"name": "VDB_DIRS",
								"value": "${VDB_DIRS}"
							},
							{
								"name": "ARTIFACT_DIR",
								"value": "${ARTIFACT_DIR}"
							}
						],
						"forcePull": true,
						"from": {
							"kind": "ImageStreamTag",
							"name": "jboss-datavirt64-openshift:1.7",
							"namespace": "${IMAGE_STREAM_NAMESPACE}"
						}
					},
					"type": "Source"
				},
				"triggers": [
					{
						"github": {
							"secret": "${GITHUB_WEBHOOK_SECRET}"
						},
						"type": "GitHub"
					},
					{
						"generic": {
							"secret": "${GENERIC_WEBHOOK_SECRET}"
						},
						"type": "Generic"
					},
					{
						"imageChange": {},
						"type": "ImageChange"
					},
					{
						"type": "ConfigChange"
					}
				]
			}
		},
		{
			"apiVersion": "v1",
			"kind": "DeploymentConfig",
			"metadata": {
				"labels": {
					"application": "${APPLICATION_NAME}"
				},
				"name": "${APPLICATION_NAME}"
			},
			"spec": {
				"replicas": 1,
				"selector": {
					"deploymentConfig": "${APPLICATION_NAME}"
				},
				"strategy": {
					"type": "Recreate"
				},
				"template": {
					"metadata": {
						"labels": {
							"application": "${APPLICATION_NAME}",
							"deploymentConfig": "${APPLICATION_NAME}"
						},
						"name": "${APPLICATION_NAME}"
					},
					"spec": {
						"containers": [
							{
								"env": [
									{
										"name": "JGROUPS_PING_PROTOCOL",
										"value": "openshift.DNS_PING"
									},
									{
										"name": "OPENSHIFT_DNS_PING_SERVICE_NAME",
										"value": "${APPLICATION_NAME}-ping"
									},
									{
										"name": "OPENSHIFT_DNS_PING_SERVICE_PORT",
										"value": "8888"
									},
									{
										"name": "HORNETQ_CLUSTER_PASSWORD",
										"value": "${HORNETQ_CLUSTER_PASSWORD}"
									},
									{
										"name": "HORNETQ_QUEUES",
										"value": "${HORNETQ_QUEUES}"
									},
									{
										"name": "HORNETQ_TOPICS",
										"value": "${HORNETQ_TOPICS}"
									},
									{
										"name": "HTTPS_KEYSTORE_DIR",
										"value": "/etc/datavirt-secret-volume"
									},
									{
										"name": "HTTPS_KEYSTORE",
										"value": "${HTTPS_KEYSTORE}"
									},
									{
										"name": "HTTPS_KEYSTORE_TYPE",
										"value": "${HTTPS_KEYSTORE_TYPE}"
									},
									{
										"name": "HTTPS_NAME",
										"value": "${HTTPS_NAME}"
									},
									{
										"name": "HTTPS_PASSWORD",
										"value": "${HTTPS_PASSWORD}"
									},
									{
										"name": "JGROUPS_ENCRYPT_SECRET",
										"value": "${JGROUPS_ENCRYPT_SECRET}"
									},
									{
										"name": "JGROUPS_ENCRYPT_KEYSTORE_DIR",
										"value": "/etc/jgroups-encrypt-secret-volume"
									},
									{
										"name": "JGROUPS_ENCRYPT_KEYSTORE",
										"value": "${JGROUPS_ENCRYPT_KEYSTORE}"
									},
									{
										"name": "JGROUPS_ENCRYPT_NAME",
										"value": "${JGROUPS_ENCRYPT_NAME}"
									},
									{
										"name": "JGROUPS_ENCRYPT_PASSWORD",
										"value": "${JGROUPS_ENCRYPT_PASSWORD}"
									},
									{
										"name": "JGROUPS_CLUSTER_PASSWORD",
										"value": "${JGROUPS_CLUSTER_PASSWORD}"
									},
									{
										"name": "AUTO_DEPLOY_EXPLODED",
										"value": "${AUTO_DEPLOY_EXPLODED}"
									},
									{
										"name": "TEIID_USERNAME",
										"value": "${TEIID_USERNAME}"
									},
									{
										"name": "TEIID_PASSWORD",
										"value": "${TEIID_PASSWORD}"
									},
									{
										"name": "ENV_FILES",
										"value": "/etc/datavirt-environment/*"
									},
									{
										"name": "DATAVIRT_TRANSPORT_KEYSTORE",
										"value": "${HTTPS_KEYSTORE}"
									},
									{
										"name": "DATAVIRT_TRANSPORT_KEYSTORE_TYPE",
										"value": "${HTTPS_KEYSTORE_TYPE}"
									},
									{
										"name": "DATAVIRT_TRANSPORT_KEY_ALIAS",
										"value": "${HTTPS_NAME}"
									},
									{
										"name": "DATAVIRT_TRANSPORT_KEYSTORE_PASSWORD",
										"value": "${HTTPS_PASSWORD}"
									},
									{
										"name": "SSO_URL",
										"value": "${SSO_URL}"
									},
									{
										"name": "SSO_SERVICE_URL",
										"value": "${SSO_SERVICE_URL}"
									},
									{
										"name": "SSO_REALM",
										"value": "${SSO_REALM}"
									},
									{
										"name": "SSO_USERNAME",
										"value": "${SSO_USERNAME}"
									},
									{
										"name": "SSO_PASSWORD",
										"value": "${SSO_PASSWORD}"
									},
									{
										"name": "SSO_PUBLIC_KEY",
										"value": "${SSO_PUBLIC_KEY}"
									},
									{
										"name": "SSO_BEARER_ONLY",
										"value": "${SSO_BEARER_ONLY}"
									},
									{
										"name": "SSO_SAML_KEYSTORE_SECRET",
										"value": "${SSO_SAML_KEYSTORE_SECRET}"
									},
									{
										"name": "SSO_SAML_KEYSTORE",
										"value": "${SSO_SAML_KEYSTORE}"
									},
									{
										"name": "SSO_SAML_KEYSTORE_DIR",
										"value": "/etc/sso-saml-secret-volume"
									},
									{
										"name": "SSO_SAML_CERTIFICATE_NAME",
										"value": "${SSO_SAML_CERTIFICATE_NAME}"
									},
									{
										"name": "SSO_SAML_KEYSTORE_PASSWORD",
										"value": "${SSO_SAML_KEYSTORE_PASSWORD}"
									},
									{
										"name": "SSO_SECRET",
										"value": "${SSO_SECRET}"
									},
									{
										"name": "SSO_ENABLE_CORS",
										"value": "${SSO_ENABLE_CORS}"
									},
									{
										"name": "SSO_SAML_LOGOUT_PAGE",
										"value": "${SSO_SAML_LOGOUT_PAGE}"
									},
									{
										"name": "SSO_DISABLE_SSL_CERTIFICATE_VALIDATION",
										"value": "${SSO_DISABLE_SSL_CERTIFICATE_VALIDATION}"
									},
									{
										"name": "SSO_TRUSTSTORE",
										"value": "${SSO_TRUSTSTORE}"
									},
									{
										"name": "SSO_TRUSTSTORE_DIR",
										"value": "/etc/sso-secret-volume"
									},
									{
										"name": "SSO_TRUSTSTORE_PASSWORD",
										"value": "${SSO_TRUSTSTORE_PASSWORD}"
									},
									{
										"name": "SSO_OPENIDCONNECT_DEPLOYMENTS",
										"value": "${SSO_OPENIDCONNECT_DEPLOYMENTS}"
									},
									{
										"name": "SSO_SAML_DEPLOYMENTS",
										"value": "${SSO_SAML_DEPLOYMENTS}"
									},
									{
										"name": "HOSTNAME_HTTP",
										"value": "${HOSTNAME_HTTP}"
									},
									{
										"name": "HOSTNAME_HTTPS",
										"value": "${HOSTNAME_HTTPS}"
									}
								],
								"image": "${APPLICATION_NAME}",
								"imagePullPolicy": "Always",
								"livenessProbe": {
									"exec": {
										"command": [
											"/bin/bash",
											"-c",
											"/opt/eap/bin/livenessProbe.sh"
										]
									},
									"initialDelaySeconds": 60
								},
								"name": "${APPLICATION_NAME}",
								"ports": [
									{
										"containerPort": 8778,
										"name": "jolokia",
										"protocol": "TCP"
									},
									{
										"containerPort": 8080,
										"name": "http",
										"protocol": "TCP"
									},
									{
										"containerPort": 8443,
										"name": "https",
										"protocol": "TCP"
									},
									{
										"containerPort": 31000,
										"name": "jdbc",
										"protocol": "TCP"
									},
									{
										"containerPort": 31443,
										"name": "jdbcs",
										"protocol": "TCP"
									},
									{
										"containerPort": 35432,
										"name": "odbc",
										"protocol": "TCP"
									},
									{
										"containerPort": 35443,
										"name": "odbcs",
										"protocol": "TCP"
									},
									{
										"containerPort": 8888,
										"name": "ping",
										"protocol": "TCP"
									}
								],
								"readinessProbe": {
									"exec": {
										"command": [
											"/bin/bash",
											"-c",
											"/opt/eap/bin/readinessProbe.sh"
										]
									}
								},
								"resources": {
									"limits": {
										"memory": "${MEMORY_LIMIT}"
									}
								},
								"volumeMounts": [
									{
										"mountPath": "/etc/datavirt-environment",
										"name": "configuration",
										"readOnly": true
									},
									{
										"mountPath": "/etc/datavirt-secret-volume",
										"name": "datavirt-keystore-volume",
										"readOnly": true
									},
									{
										"mountPath": "/etc/jgroups-encrypt-secret-volume",
										"name": "datavirt-jgroups-keystore-volume",
										"readOnly": true
									}
								]
							}
						],
						"terminationGracePeriodSeconds": 60,
						"volumes": [
							{
								"name": "configuration",
								"secret": {
									"secretName": "${CONFIGURATION_NAME}"
								}
							},
							{
								"name": "datavirt-keystore-volume",
								"secret": {
									"secretName": "${HTTPS_SECRET}"
								}
							},
							{
								"name": "datavirt-jgroups-keystore-volume",
								"secret": {
									"secretName": "${JGROUPS_ENCRYPT_SECRET}"
								}
							}
						]
					}
				},
				"triggers": [
					{
						"imageChangeParams": {
							"automatic": true,
							"containerNames": [
								"${APPLICATION_NAME}"
							],
							"from": {
								"kind": "ImageStreamTag",
								"name": "${APPLICATION_NAME}:latest"
							}
						},
						"type": "ImageChange"
					},
					{
						"type": "ConfigChange"
					}
				]
			}
		}
	],
	"parameters": [
		{
			"name": "APPLICATION_NAME",
			"displayName": "Application Name",
			"description": "The name for the application.",
			"value": "datavirt-app",
			"required": true
		},
		{
			"name": "CONFIGURATION_NAME",
			"displayName": "Configuration Secret Name",
			"description": "The name of the secret containing configuration properties for the data sources.",
			"value": "datavirt-app-config",
			"required": true
		},
		{
			"name": "HOSTNAME_HTTP",
			"displayName": "Custom http Route Hostname",
			"description": "Specify a custom hostname for the http route.  Leave blank to use default hostname, e.g.: \u003cservice-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"
		},
		{
			"name": "HOSTNAME_HTTPS",
			"displayName": "Custom https Route Hostname",
			"description": "Specify a custom hostname for the https route.  Leave blank to use default hostname, e.g.: secure-\u003cservice-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"
		},
		{
			"name": "HOSTNAME_JDBC",
			"displayName": "Custom JDBC Route Hostname",
			"description": "Specify a custom hostname for the JDBC route.  Leave blank to use default hostname, e.g.: secure-\u003cservice-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"
		},
		{
			"name": "SOURCE_REPOSITORY_URL",
			"displayName": "Git Repository URL",
			"description": "The URL of the repository with your application source code.",
			"value": "https://github.com/jboss-openshift/openshift-quickstarts",
			"required": true
		},
		{
			"name": "SOURCE_REPOSITORY_REF",
			"displayName": "Git Reference",
			"description": "Set this to a branch name, tag or other ref of your repository if you are not using the default branch.",
			"value": "master"
		},
		{
			"name": "CONTEXT_DIR",
			"displayName": "Context Directory",
			"description": "Set this to the relative path to your project if it is not in the root of your repository.",
			"value": "datavirt64/dynamicvdb-datafederation/app"
		},
		{
			"name": "HORNETQ_QUEUES",
			"displayName": "Queues",
			"description": "Queue names"
		},
		{
			"name": "HORNETQ_TOPICS",
			"displayName": "Topics",
			"description": "Topic names"
		},
		{
			"name": "HORNETQ_CLUSTER_PASSWORD",
			"displayName": "HornetQ Password",
			"description": "HornetQ cluster admin password",
			"generate": "expression",
			"from": "[a-zA-Z0-9]{8}",
			"required": true
		},
		{
			"name": "HTTPS_SECRET",
			"displayName": "Server Keystore Secret Name",
			"description": "The name of the secret containing the keystore to be used for serving secure content.",
			"value": "datavirt-app-secret",
			"required": true
		},
		{
			"name": "HTTPS_KEYSTORE",
			"displayName": "Server Keystore Filename",
			"description": "The name of the keystore file within the secret.",
			"value": "keystore.jks"
		},
		{
			"name": "HTTPS_KEYSTORE_TYPE",
			"displayName": "Server Keystore Type",
			"description": "The type of the keystore file (JKS or JCEKS)."
		},
		{
			"name": "HTTPS_NAME",
			"displayName": "Server Certificate Name",
			"description": "The name associated with the server certificate.",
			"value": "jboss"
		},
		{
			"name": "HTTPS_PASSWORD",
			"displayName": "Server Keystore Password",
			"description": "The password for the keystore and certificate",
			"value": "mykeystorepass"
		},
		{
			"name": "TEIID_USERNAME",
			"displayName": "Teiid Username",
			"description": "Username associated with Teiid data service.",
			"generate": "expression",
			"from": "[\\a]{8}",
			"required": true
		},
		{
			"name": "TEIID_PASSWORD",
			"displayName": "Teiid User Password",
			"description": "Password for Teiid user.",
			"generate": "expression",
			"from": "[\\a\\A]{8}[\\d]{1}[\\A]{1}",
			"required": true
		},
		{
			"name": "GITHUB_WEBHOOK_SECRET",
			"displayName": "Github Webhook Secret",
			"description": "A secret string used to configure the GitHub webhook.",
			"generate": "expression",
			"from": "[a-zA-Z0-9]{8}",
			"required": true
		},
		{
			"name": "GENERIC_WEBHOOK_SECRET",
			"displayName": "Generic Webhook Secret",
			"description": "A secret string used to configure the Generic webhook.",
			"generate": "expression",
			"from": "[a-zA-Z0-9]{8}",
			"required": true
		},
		{
			"name": "IMAGE_STREAM_NAMESPACE",
			"displayName": "ImageStream Namespace",
			"description": "Namespace in which the ImageStreams for Red Hat Middleware images are installed. These ImageStreams are normally installed in the openshift namespace. You should only need to modify this if you've installed the ImageStreams in a different namespace/project.",
			"value": "openshift",
			"required": true
		},
		{
			"name": "JGROUPS_ENCRYPT_SECRET",
			"displayName": "JGroups Secret Name",
			"description": "The name of the secret containing the keystore to be used for securing JGroups communications.",
			"value": "datavirt-app-secret"
		},
		{
			"name": "JGROUPS_ENCRYPT_KEYSTORE",
			"displayName": "JGroups Keystore Filename",
			"description": "The name of the keystore file within the JGroups secret.",
			"value": "jgroups.jceks"
		},
		{
			"name": "JGROUPS_ENCRYPT_NAME",
			"displayName": "JGroups Certificate Name",
			"description": "The name associated with the JGroups server certificate",
			"value": "secret-key"
		},
		{
			"name": "JGROUPS_ENCRYPT_PASSWORD",
			"displayName": "JGroups Keystore Password",
			"description": "The password for the keystore and certificate",
			"value": "password"
		},
		{
			"name": "JGROUPS_CLUSTER_PASSWORD",
			"displayName": "JGroups Cluster Password",
			"description": "Password used by JGroups to authenticate nodes in the cluster.",
			"generate": "expression",
			"from": "[a-zA-Z0-9]{8}",
			"required": true
		},
		{
			"name": "AUTO_DEPLOY_EXPLODED",
			"displayName": "Deploy Exploded Archives",
			"description": "Controls whether exploded deployment content should be automatically deployed",
			"value": "false"
		},
		{
			"name": "VDB_DIRS",
			"displayName": "VDB Deployment Directories",
			"description": "Comma delimited list of source directories containing VDBs for deployment"
		},
		{
			"name": "SSO_URL",
			"displayName": "SSO Server URL",
			"description": "The URL for the SSO server (e.g. https://secure-sso-myproject.example.com/auth).  This is the URL through which the user will be redirected when a login or token is required by the application."
		},
		{
			"name": "SSO_SERVICE_URL",
			"displayName": "SSO Server Service URL",
			"description": "The URL for the interal SSO service, where secure-sso is the kubernetes service exposed by the SSO server.  This is used to create the application client(s) (see SSO_USERNAME).  This can also be the same as SSO_URL."
		},
		{
			"name": "SSO_REALM",
			"displayName": "SSO Realm",
			"description": "The SSO realm to which the application client(s) should be associated (e.g. demo)."
		},
		{
			"name": "SSO_USERNAME",
			"displayName": "SSO Username",
			"description": "The username used to access the SSO service.  This is used to create the appliction client(s) within the specified SSO realm. This should match the SSO_SERVICE_USERNAME specified through one of the sso70-* templates."
		},
		{
			"name": "SSO_PASSWORD",
			"displayName": "SSO User's Password",
			"description": "The password for the SSO service user."
		},
		{
			"name": "SSO_PUBLIC_KEY",
			"displayName": "SSO Realm Public Key",
			"description": "SSO Realm Public Key. Public key is recommended to be passed into the template to avoid man-in-the-middle security vulnerability.  This can be retrieved from the SSO server, for the specified realm."
		},
		{
			"name": "SSO_BEARER_ONLY",
			"displayName": "SSO Bearer Only",
			"description": "SSO Client Access Type. true or false"
		},
		{
			"name": "SSO_SAML_KEYSTORE_SECRET",
			"displayName": "SSO SAML Keystore Secret",
			"description": "The name of the secret containing the keystore file",
			"value": "datavirt-app-secret"
		},
		{
			"name": "SSO_SAML_KEYSTORE",
			"displayName": "SSO SAML Keystore File",
			"description": "The name of the keystore file within the secret",
			"value": "keystore.jks"
		},
		{
			"name": "SSO_SAML_CERTIFICATE_NAME",
			"displayName": "SSO SAML Certificate Alias",
			"description": "The name associated with the server certificate"
		},
		{
			"name": "SSO_SAML_KEYSTORE_PASSWORD",
			"displayName": "SSO SAML Keystore Password",
			"description": "The password for the keystore and certificate"
		},
		{
			"name": "SSO_SECRET",
			"displayName": "SSO Client Secret",
			"description": "The SSO Client Secret for Confidential Access",
			"generate": "expression",
			"from": "[a-zA-Z0-9]{8}"
		},
		{
			"name": "SSO_ENABLE_CORS",
			"displayName": "SSO Enable CORS",
			"description": "Enable CORS for SSO applications. true or false",
			"value": "false"
		},
		{
			"name": "SSO_SAML_LOGOUT_PAGE",
			"displayName": "SSO SAML Logout Page",
			"description": "SSO logout page for SAML applications",
			"value": "/"
		},
		{
			"name": "SSO_DISABLE_SSL_CERTIFICATE_VALIDATION",
			"displayName": "SSO Disable SSL Certificate Validation",
			"description": "If true SSL communication between EAP and the SSO Server will be insecure (i.e. certificate validation is disabled with curl)",
			"value": "true"
		},
		{
			"name": "SSO_TRUSTSTORE",
			"displayName": "SSO Truststore File",
			"description": "The name of the truststore file within the secret (e.g. truststore.jks)"
		},
		{
			"name": "SSO_TRUSTSTORE_PASSWORD",
			"displayName": "SSO Truststore Password",
			"description": "The password for the truststore and certificate (e.g. mykeystorepass)"
		},
		{
			"name": "SSO_TRUSTSTORE_SECRET",
			"displayName": "SSO Truststore Secret",
			"description": "The name of the secret containing the truststore file (e.g. truststore-secret). Used for volume secretName",
			"value": "datavirt-app-secret"
		},
		{
			"name": "SSO_OPENIDCONNECT_DEPLOYMENTS",
			"displayName": "SSO OpenIDConnect Deployments",
			"description": "Comma delimited list of deployments that shoulds be exploded and enabled for SSO OpenIDConnect via auth-method"
		},
		{
			"name": "SSO_SAML_DEPLOYMENTS",
			"displayName": "SSO SAML Deployments",
			"description": "Comma delimited list of deployments that shoulds be exploded and enabled for SSO SAML via auth-method"
		},
		{
			"name": "MAVEN_MIRROR_URL",
			"displayName": "Maven mirror URL",
			"description": "Maven mirror to use for S2I builds"
		},
		{
			"name": "ARTIFACT_DIR",
			"displayName": "Artifact Directories",
			"description": "List of directories from which archives will be copied into the deployment folder. If unspecified, all archives in /target will be copied."
		},
		{
			"name": "MEMORY_LIMIT",
			"description": "Container memory limit",
			"value": "1Gi"
		}
	],
	"labels": {
		"jdv64": "1.7.0",
		"template": "datavirt64-secure-s2i"
	}
}